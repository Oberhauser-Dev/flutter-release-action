name: 'Flutter Release Action'
description: 'Build, release, publish and deploy Flutter apps (Web, Android, iOS, macOS, Linux, Windows).'
author: 'August Oberhauser'
branding:
  icon: 'smartphone'
  color: 'purple'
inputs:
  token:
    description: "Authorized secret GitHub Personal Access Token. Defaults to github.token"
    required: false
    default: ${{ github.token }}
  working-directory:
    description: 'Specifies the working directory where the command is run.'
    required: false
    default: './'
  app-name:
    description: 'The name of the app executable'
    required: true
  app-version:
    description: 'Semantic version of the release, see https://semver.org/'
    required: false
    default: ${{ github.ref_name }}
  tag:
    description: 'The tag of the release, could be the same as the version'
    required: false
    default: ${{ github.ref }}
  build-args:
    description: 'Add options such as "--dart-define" to the flutter build command'
    required: false
    default: ''
  release-type:
    description: 'Release one of the following options: apk, web, ipk, macos, windows, debian'
    default: 'true'
    required: false
#  deploy:
#    description: 'Whether the app should be deployed'
#    required: false
#    default: 'false'

outputs:
  artifact-name:
    description: "The name of the app build artifact"
    value: ${{ steps.release.outputs.artifact-name }}
    
runs:
  using: "composite"
  steps:
    - name: Release App
      id: release
      # Remove leading and trailing newline, if existent, add a newline at the beginning
      # Replace newline with ` --build-arg=`
      run: |
        buildArgs='${{ inputs.build-args }}'
        buildArgs=${buildArgs#$'\n'}
        buildArgs=${buildArgs%$'\n'}
        ln=$'\n'
        buildArgs="$ln$buildArgs"
        buildArgs="${buildArgs//$'\n'/' --build-arg='}"
        dart pub global activate flutter_release
        ARTIFACT_PATH=$(dart pub global run flutter_release --app-name ${{ inputs.app-name }} --app-version=${{ inputs.app-version }} $buildArgs --release-type ${{ inputs.release-type }})
        ARTIFACT_NAME=$(basename $ARTIFACT_PATH)
        echo "artifact-path=$(echo $ARTIFACT_PATH)" >> $GITHUB_OUTPUT
        echo "artifact-name=$(echo $ARTIFACT_NAME)" >> $GITHUB_OUTPUT
      shell: bash
      working-directory: ${{ inputs.working-directory }}
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ inputs.token }}
        file: ${{ inputs.working-directory }}${{ (endsWith(inputs.working-directory, '/') && '') || '/' }}${{ steps.release.outputs.artifact-path }}
        asset_name: ${{ steps.release.outputs.artifact-name }}
        tag: ${{ inputs.tag }}
