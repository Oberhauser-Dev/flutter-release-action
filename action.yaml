name: 'Flutter Release Action'
description: 'Build, release, publish and deploy Flutter apps (Web, Android, iOS, macOS, Linux, Windows).'
author: 'August Oberhauser'
branding:
  icon: 'smartphone'
  color: 'purple'
inputs:
  token:
    description: "Authorized secret GitHub Personal Access Token. Defaults to github.token"
    required: false
    default: ${{ github.token }}
  working-directory:
    description: 'Specifies the working directory where the command is run.'
    required: false
    default: './'
  dry-run:
    description: 'Whether the process should only run dry'
    required: false
    default: 'true'
  app-name:
    description: 'The name of the app executable'
    required: true
  app-version:
    description: 'Semantic version of the release, see https://semver.org/'
    required: false
    default: ${{ github.ref_name }}
  tag:
    description: 'The tag of the release, could be the same as the version'
    required: false
    default: ${{ github.ref }}
  build-args:
    description: 'Add options such as "--dart-define" to the flutter build command'
    required: false
    default: ''
  build-type:
    description: 'Build one of the following options: apk, aab, web, ipk, macos, windows, debian'
    default: ''
    required: false
  android-keystore-file-base64:
    description: 'The Keystore file as base64 string'
    required: false
    default: ''
  android-keystore-password:
    description: 'The Keystore Password'
    required: false
    default: ''
  android-key-alias:
    description: 'The key alias of the keystore'
    required: false
    default: ''
  android-key-password:
    description: 'The password of the key alias of the keystore'
    required: false
    default: ''
  publish-stage:
    description: 'At which stage the app should be published: production, beta, alpha, internal'
    required: false
    default: ''
  publish-distributor:
    description: 'The distributor on which the app should be published: android-google-play, web-server, ios-app-store, mac-app-store, windows-ms-store, linux-ubuntu, linux-snap'
    required: false
    default: ''
  publish-android-fastlane-secrets-json-base64:
    description: 'The Google Play Credentials Json file as base64 string'
    required: false
    default: ''

outputs:
  artifact-name:
    description: "The name of the app build artifact"
    value: ${{ steps.release.outputs.artifact-name }}
    
runs:
  using: "composite"
  steps:
    - name: Install current bash on macOS
      if: runner.os == 'macOS'
      run: |
        brew install bash
        bash --version
      shell: bash
    - name: Prepare
      id: prepare
      # Remove leading and trailing newline, if existent, add a newline at the beginning
      # Replace newline with ` --build-arg=`
      run: |
        dart pub global activate flutter_release ^0.0.0
        buildArgs='${{ inputs.build-args }}'
        buildArgs=${buildArgs#$'\n'}
        buildArgs=${buildArgs%$'\n'}
        ln=$'\n'
        buildArgs="$ln$buildArgs"
        buildArgs="${buildArgs//$'\n'/' --build-arg='}"
        echo "build-args=$(echo $buildArgs)" >> $GITHUB_OUTPUT
      shell: bash
      working-directory: ${{ inputs.working-directory }}

    - name: Release App
      if: ${{ inputs.publish-distributor == '' }} # Only upload to GitHub if in publishing mode.
      id: release
      run: |
        ARTIFACT_PATH=$(dart pub global run flutter_release build \
          ${{ inputs.build-type }} \
          --app-name ${{ inputs.app-name }} \
          --app-version=${{ inputs.app-version }} \
          ${{ steps.prepare.outputs.build-args }} \
          ${{ ((inputs.build-type == 'apk' || inputs.build-type == 'aab') && inputs.android-keystore-file-base64 != '' && inputs.android-keystore-password != '' && inputs.android-key-alias != '') && format('--keystore-file-base64=::add-mask::{0} --keystore-password=::add-mask::{1} --key-alias=::add-mask::{2} --key-password=::add-mask::{3}', inputs.android-keystore-file-base64, inputs.android-keystore-password, inputs.android-key-alias, inputs.android-key-password) || '' }} \
          | tail -1)
        ARTIFACT_NAME=$(basename "$ARTIFACT_PATH")
        echo "artifact-path=$(echo $ARTIFACT_PATH)" >> $GITHUB_OUTPUT
        echo "artifact-name=$(echo $ARTIFACT_NAME)" >> $GITHUB_OUTPUT
      shell: bash
      working-directory: ${{ inputs.working-directory }}
    - name: Upload binaries to release
      if: ${{ inputs.dry-run == 'false' }}
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ inputs.token }}
        file: ${{ inputs.working-directory }}${{ (endsWith(inputs.working-directory, '/') && '') || '/' }}${{ steps.release.outputs.artifact-path }}
        asset_name: ${{ steps.release.outputs.artifact-name }}
        tag: ${{ inputs.tag }}

    - name: Publish on Google Play
      if: ${{ inputs.publish-distributor == 'android-google-play' }}
      run: |
        dart pub global run flutter_release publish \
          ${{ inputs.dry-run == 'false' && '' || '--dry-run' }} \
          ${{ inputs.publish-distributor }} \
          ${{ inputs.publish-stage == '' && '' || format('--stage={0}', inputs.publish-stage) }} \
          --app-name ${{ inputs.app-name }} \
          --app-version=${{ inputs.app-version }} \
          ${{ steps.prepare.outputs.build-args }} \
          --fastlane-secrets-json-base64=::add-mask::${{ inputs.publish-android-fastlane-secrets-json-base64 }} \
          --keystore-file-base64=::add-mask::${{ inputs.android-keystore-file-base64 }} \
          --keystore-password=::add-mask::${{ inputs.android-keystore-password }} \
          --key-alias=::add-mask::${{ inputs.android-key-alias }} \
          --key-password=::add-mask::${{ inputs.android-key-password }}
      shell: bash
      working-directory: ${{ inputs.working-directory }}
